% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate_labels.R
\name{validate_labels}
\alias{validate_labels}
\title{Checks the labels of a linelist object}
\usage{
validate_labels(x, strict = FALSE, allow_extra = TRUE)
}
\arguments{
\item{x}{a \code{linelist} object}

\item{strict}{a \code{logical} indicating whether checks should be strict}

\item{allow_extra}{a \code{logical} indicating whether non-default labels are
allowed}
}
\value{
If checks pass, a \code{linelist} object; otherwise issues an error.
}
\description{
This function evaluates the validity of the labels of a \code{linelist} object by
checking that: i) labels are present ii) labels are characters only iii)
that all default labels are present (if \code{strict = TRUE}) iv) that no extra
tag exists (if \code{allow_extra} is \code{FALSE}).
}
\examples{
if (require(outbreaks) && require(magrittr)) {
  ## create a valid linelist
  x <- measles_hagelloch_1861 \%>\%
    make_linelist(
      id = "case_ID",
      date_onset = "date_of_prodrome",
      age = "age",
      gender = "gender"
    )
  x

  x <- make_linelist(
    measles_hagelloch_1861,
    !!!update_defaults(id = "case_ID")
  )

  ## validation is as permissive as the defaults in `make_linelist`
  validate_labels(x)
  ## Making it more strict
  tryCatch(validate_labels(x, strict = TRUE, allow_extra = FALSE),
    error = paste
  )
}
}
\seealso{
\code{\link[=validate_types]{validate_types()}} to check if tagged variables have
the right classes
}
