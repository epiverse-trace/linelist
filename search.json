[{"path":"https://epiverse-trace.github.io/linelist/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 data.org Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"verbs-operating-on-rows","dir":"Articles","previous_headings":"","what":"Verbs operating on rows","title":"Compatibility with dplyr","text":"linelist modify anything regarding behaviour row-operations. , fully compatible dplyr verbs operating rows ---box. can see following examples linelist produce errors, warnings messages tags conserved dplyr operations rows.","code":""},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"dplyrarrange","dir":"Articles","previous_headings":"Verbs operating on rows","what":"dplyr::arrange() ✅","title":"Compatibility with dplyr","text":"","code":"x %>%   arrange(case_ID) %>%   head() #>  #> // linelist object #>   case_ID infector date_of_prodrome date_of_rash date_of_death age gender #> 1       1       45       1861-11-21   1861-11-25          <NA>   7      f #> 2       2       45       1861-11-23   1861-11-27          <NA>   6      f #> 3       3      172       1861-11-28   1861-12-02          <NA>   4      f #> 4       4      180       1861-11-27   1861-11-28          <NA>  13      m #> 5       5       45       1861-11-22   1861-11-27          <NA>   8      f #> 6       6      180       1861-11-26   1861-11-29          <NA>  12      m #>   family_ID class complications x_loc y_loc #> 1        41     1           yes 142.5 100.0 #> 2        41     1           yes 142.5 100.0 #> 3        41     0           yes 142.5 100.0 #> 4        61     2           yes 165.0 102.5 #> 5        42     1           yes 145.0 120.0 #> 6        42     2           yes 145.0 120.0 #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:age"},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"dplyrdistinct","dir":"Articles","previous_headings":"Verbs operating on rows","what":"dplyr:distinct() ✅","title":"Compatibility with dplyr","text":"","code":"x %>%   distinct() %>%   head() #>  #> // linelist object #>   case_ID infector date_of_prodrome date_of_rash date_of_death age gender #> 1       1       45       1861-11-21   1861-11-25          <NA>   7      f #> 2       2       45       1861-11-23   1861-11-27          <NA>   6      f #> 3       3      172       1861-11-28   1861-12-02          <NA>   4      f #> 4       4      180       1861-11-27   1861-11-28          <NA>  13      m #> 5       5       45       1861-11-22   1861-11-27          <NA>   8      f #> 6       6      180       1861-11-26   1861-11-29          <NA>  12      m #>   family_ID class complications x_loc y_loc #> 1        41     1           yes 142.5 100.0 #> 2        41     1           yes 142.5 100.0 #> 3        41     0           yes 142.5 100.0 #> 4        61     2           yes 165.0 102.5 #> 5        42     1           yes 145.0 120.0 #> 6        42     2           yes 145.0 120.0 #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:age"},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"dplyrfilter","dir":"Articles","previous_headings":"Verbs operating on rows","what":"dplyr::filter() ✅","title":"Compatibility with dplyr","text":"","code":"x %>%   filter(age >= 10) %>%   head() #>  #> // linelist object #>   case_ID infector date_of_prodrome date_of_rash date_of_death age gender #> 1       4      180       1861-11-27   1861-11-28          <NA>  13      m #> 2       6      180       1861-11-26   1861-11-29          <NA>  12      m #> 3       8       45       1861-11-21   1861-11-26          <NA>  10      m #> 4       9      182       1861-11-26   1861-11-30          <NA>  13      m #> 5      11      182       1861-11-25   1861-11-30          <NA>  11      f #> 6      13       12       1861-11-30   1861-12-05          <NA>  13      m #>   family_ID class complications x_loc y_loc #> 1        61     2           yes 165.0 102.5 #> 2        42     2           yes 145.0 120.0 #> 3        44     1           yes  97.5 155.0 #> 4        44     2           yes  97.5 155.0 #> 5        27     2           yes 270.0 135.0 #> 6        32     2           yes 195.0  27.5 #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:age"},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"dplyrslice","dir":"Articles","previous_headings":"Verbs operating on rows","what":"dplyr::slice() ✅","title":"Compatibility with dplyr","text":"","code":"x %>%   slice(5:10) #>  #> // linelist object #>   case_ID infector date_of_prodrome date_of_rash date_of_death age gender #> 1       5       45       1861-11-22   1861-11-27          <NA>   8      f #> 2       6      180       1861-11-26   1861-11-29          <NA>  12      m #> 3       7       42       1861-11-24   1861-11-28          <NA>   6      m #> 4       8       45       1861-11-21   1861-11-26          <NA>  10      m #> 5       9      182       1861-11-26   1861-11-30          <NA>  13      m #> 6      10       45       1861-11-21   1861-11-25          <NA>   7      f #>   family_ID class complications x_loc y_loc #> 1        42     1           yes 145.0 120.0 #> 2        42     2           yes 145.0 120.0 #> 3        26     0           yes 272.5 147.5 #> 4        44     1           yes  97.5 155.0 #> 5        44     2           yes  97.5 155.0 #> 6        29     1           yes 240.0  75.0 #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:age  x %>%   slice_head(n = 5) #>  #> // linelist object #>   case_ID infector date_of_prodrome date_of_rash date_of_death age gender #> 1       1       45       1861-11-21   1861-11-25          <NA>   7      f #> 2       2       45       1861-11-23   1861-11-27          <NA>   6      f #> 3       3      172       1861-11-28   1861-12-02          <NA>   4      f #> 4       4      180       1861-11-27   1861-11-28          <NA>  13      m #> 5       5       45       1861-11-22   1861-11-27          <NA>   8      f #>   family_ID class complications x_loc y_loc #> 1        41     1           yes 142.5 100.0 #> 2        41     1           yes 142.5 100.0 #> 3        41     0           yes 142.5 100.0 #> 4        61     2           yes 165.0 102.5 #> 5        42     1           yes 145.0 120.0 #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:age  x %>%   slice_tail(n = 5) #>  #> // linelist object #>   case_ID infector date_of_prodrome date_of_rash date_of_death age gender #> 1     184       NA       1861-10-30   1861-11-06          <NA>  13   <NA> #> 2     185       82       1861-12-03   1861-12-07          <NA>   3      m #> 3     186       45       1861-11-22   1861-11-26          <NA>   6   <NA> #> 4     187       82       1861-12-07   1861-12-11          <NA>   0      m #> 5     188      175       1861-11-23   1861-11-27          <NA>   1   <NA> #>   family_ID class complications x_loc y_loc #> 1        51     2           yes 182.5 200.0 #> 2        21     0           yes 205.0 182.5 #> 3        57     0           yes 212.5  90.0 #> 4        21     0           yes 205.0 182.5 #> 5        57     0           yes 212.5  90.0 #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:age  x %>%   slice_min(age, n = 3) #>  #> // linelist object #>   case_ID infector date_of_prodrome date_of_rash date_of_death age gender #> 1     113       31       1861-12-04   1861-12-07          <NA>   0      f #> 2     119      116       1861-12-01   1861-12-08          <NA>   0      f #> 3     147       18       1861-12-03   1861-12-07          <NA>   0      f #> 4     150      148       1861-12-11   1861-12-15          <NA>   0      m #> 5     160       68       1861-12-12   1861-12-13          <NA>   0      f #> 6     167      110       1861-12-14   1861-12-18          <NA>   0      m #> 7     171      169       1861-12-15   1861-12-17          <NA>   0      m #> 8     176      146       1861-12-11   1861-12-15          <NA>   0   <NA> #> 9     187       82       1861-12-07   1861-12-11          <NA>   0      m #>   family_ID class complications x_loc y_loc #> 1        15     0           yes 125.0 187.5 #> 2        40     0           yes 127.5 147.5 #> 3        13     0           yes  72.5 152.5 #> 4        19     0           yes 255.0 230.0 #> 5        16     0           yes 165.0 192.5 #> 6        49     0           yes 175.0 140.0 #> 7        38     0           yes 132.5  80.0 #> 8        64     0           yes  72.5 152.5 #> 9        21     0           yes 205.0 182.5 #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:age  x %>%   slice_max(age, n = 3) #>  #> // linelist object #>   case_ID infector date_of_prodrome date_of_rash date_of_death age gender #> 1      16      181       1861-11-21   1861-11-25          <NA>  15      f #> 2      62       11       1861-12-02   1861-12-06          <NA>  14      m #> 3     117      116       1861-12-02   1861-12-06          <NA>  14      m #>   family_ID class complications x_loc y_loc #> 1        43     2           yes 172.5 172.5 #> 2         8     2           yes 270.0 102.5 #> 3        40     2           yes 127.5 147.5 #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:age  x %>%   slice_sample(n = 5) #>  #> // linelist object #>   case_ID infector date_of_prodrome date_of_rash date_of_death age gender #> 1     115       16       1861-12-01   1861-12-07          <NA>  11      f #> 2     180      177       1861-11-17   1861-11-21          <NA>  10      m #> 3      93       45       1861-11-22   1861-11-26          <NA>   8      m #> 4       8       45       1861-11-21   1861-11-26          <NA>  10      m #> 5     128        7       1861-12-03   1861-12-05          <NA>   5      m #>   family_ID class complications x_loc y_loc #> 1        66     2           yes  75.0  20.0 #> 2        17     2           yes 182.5 200.0 #> 3        36     1           yes 162.5  47.5 #> 4        44     1           yes  97.5 155.0 #> 5         6     0           yes 240.0 225.0 #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:age"},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"verbs-operating-on-columns","dir":"Articles","previous_headings":"","what":"Verbs operating on columns","title":"Compatibility with dplyr","text":"operations columns, linelist : stay invisible conserve tags tagged column affected operation trigger lost_tags_action() tagged columns affected operation","code":""},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"dplyrmutate-partial","dir":"Articles","previous_headings":"Verbs operating on columns","what":"dplyr::mutate() ✓ (partial)","title":"Compatibility with dplyr","text":"incomplete compatibility dplyr::mutate() : simple renames without actual modification column don’t update tags. scenario, users rather use dplyr::rename() place column modifications cause tag losses Although dplyr::mutate() able leverage full power linelist tags, linelist objects behave expected way data.frame :","code":"x %>%   mutate(major = age >= 18) %>%   head() #>  #> // linelist object #>   case_ID infector date_of_prodrome date_of_rash date_of_death age gender #> 1       1       45       1861-11-21   1861-11-25          <NA>   7      f #> 2       2       45       1861-11-23   1861-11-27          <NA>   6      f #> 3       3      172       1861-11-28   1861-12-02          <NA>   4      f #> 4       4      180       1861-11-27   1861-11-28          <NA>  13      m #> 5       5       45       1861-11-22   1861-11-27          <NA>   8      f #> 6       6      180       1861-11-26   1861-11-29          <NA>  12      m #>   family_ID class complications x_loc y_loc major #> 1        41     1           yes 142.5 100.0 FALSE #> 2        41     1           yes 142.5 100.0 FALSE #> 3        41     0           yes 142.5 100.0 FALSE #> 4        61     2           yes 165.0 102.5 FALSE #> 5        42     1           yes 145.0 120.0 FALSE #> 6        42     2           yes 145.0 120.0 FALSE #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:age"},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"dplyrpull","dir":"Articles","previous_headings":"Verbs operating on columns","what":"dplyr::pull() ✅","title":"Compatibility with dplyr","text":"dplyr::pull() returns vector, results, expected, loss linelist class tags:","code":"x %>%   pull(age) #>   [1]  7  6  4 13  8 12  6 10 13  7 11  7 13 13  8 15 10  2 11 10 13 10  7  4 12 #>  [26]  7  5 10 13 11  9  7  7 11 13 11 13 12 10 13 12  4  2 10  7 13 11  3 10  6 #>  [51]  4 13  6  4 11  8  3  9 10  2  5 14 12  7  2  5 11  2  1 13 10 10 11 10 13 #>  [76]  2  8 11  5 12 12  8 10  6  5  3 12 10  3 11  4  2  8  4  1  2 10  3  5 12 #> [101]  7 12 12  5  3  4 12  6  6  3 12 10  0 13 11  8 14  2  0  1 10  1  1  3  2 #> [126]  5  1  5  4 12  1 11  2 13  2 13 10 11 13  2  4  5 11  2  8  4  0 13  4  0 #> [151]  2  4 10  6 13  8  4  3  2  0  6  6  1  3  2  1  0  1  4 10  0  3  6  3  2 #> [176]  0  8  4  1 10 10 13  4 13  3  6  0  1"},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"dplyrrelocate","dir":"Articles","previous_headings":"Verbs operating on columns","what":"dplyr::relocate() ✅","title":"Compatibility with dplyr","text":"","code":"x %>%   relocate(date_of_prodrome, .before = 1) %>%   head() #>  #> // linelist object #>   date_of_prodrome case_ID infector date_of_rash date_of_death age gender #> 1       1861-11-21       1       45   1861-11-25          <NA>   7      f #> 2       1861-11-23       2       45   1861-11-27          <NA>   6      f #> 3       1861-11-28       3      172   1861-12-02          <NA>   4      f #> 4       1861-11-27       4      180   1861-11-28          <NA>  13      m #> 5       1861-11-22       5       45   1861-11-27          <NA>   8      f #> 6       1861-11-26       6      180   1861-11-29          <NA>  12      m #>   family_ID class complications x_loc y_loc #> 1        41     1           yes 142.5 100.0 #> 2        41     1           yes 142.5 100.0 #> 3        41     0           yes 142.5 100.0 #> 4        61     2           yes 165.0 102.5 #> 5        42     1           yes 145.0 120.0 #> 6        42     2           yes 145.0 120.0 #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:age"},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"dplyrrename-dplyrrename_with","dir":"Articles","previous_headings":"Verbs operating on columns","what":"dplyr::rename() & dplyr::rename_with() ✅","title":"Compatibility with dplyr","text":"dplyr::rename() fully compatible ---box linelist, meaning tags updated time columns renamed. possibly uses names<-() hood, linelist provides custom names<-.linelist() method :","code":"x %>%   rename(edad = age) %>%   head() #>  #> // linelist object #>   case_ID infector date_of_prodrome date_of_rash date_of_death edad gender #> 1       1       45       1861-11-21   1861-11-25          <NA>    7      f #> 2       2       45       1861-11-23   1861-11-27          <NA>    6      f #> 3       3      172       1861-11-28   1861-12-02          <NA>    4      f #> 4       4      180       1861-11-27   1861-11-28          <NA>   13      m #> 5       5       45       1861-11-22   1861-11-27          <NA>    8      f #> 6       6      180       1861-11-26   1861-11-29          <NA>   12      m #>   family_ID class complications x_loc y_loc #> 1        41     1           yes 142.5 100.0 #> 2        41     1           yes 142.5 100.0 #> 3        41     0           yes 142.5 100.0 #> 4        61     2           yes 165.0 102.5 #> 5        42     1           yes 145.0 120.0 #> 6        42     2           yes 145.0 120.0 #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:edad  x %>%   rename_with(toupper) %>%   head() #>  #> // linelist object #>   CASE_ID INFECTOR DATE_OF_PRODROME DATE_OF_RASH DATE_OF_DEATH AGE GENDER #> 1       1       45       1861-11-21   1861-11-25          <NA>   7      f #> 2       2       45       1861-11-23   1861-11-27          <NA>   6      f #> 3       3      172       1861-11-28   1861-12-02          <NA>   4      f #> 4       4      180       1861-11-27   1861-11-28          <NA>  13      m #> 5       5       45       1861-11-22   1861-11-27          <NA>   8      f #> 6       6      180       1861-11-26   1861-11-29          <NA>  12      m #>   FAMILY_ID CLASS COMPLICATIONS X_LOC Y_LOC #> 1        41     1           yes 142.5 100.0 #> 2        41     1           yes 142.5 100.0 #> 3        41     0           yes 142.5 100.0 #> 4        61     2           yes 165.0 102.5 #> 5        42     1           yes 145.0 120.0 #> 6        42     2           yes 145.0 120.0 #>  #> // tags: id:CASE_ID, date_onset:DATE_OF_PRODROME, gender:GENDER, age:AGE"},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"dplyrselect-partial","dir":"Articles","previous_headings":"Verbs operating on columns","what":"dplyr::select() ✓ (partial)","title":"Compatibility with dplyr","text":"dplyr::select() currently partially compatible linelist renames select() correctly update tags","code":"# Works fine x %>%   select(case_ID, date_of_prodrome, gender, age) %>%   head() #>  #> // linelist object #>   case_ID date_of_prodrome gender age #> 1       1       1861-11-21      f   7 #> 2       2       1861-11-23      f   6 #> 3       3       1861-11-28      f   4 #> 4       4       1861-11-27      m  13 #> 5       5       1861-11-22      f   8 #> 6       6       1861-11-26      m  12 #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:age  # Tags are not updated! x %>%   select(case_ID, date_of_prodrome, gender, edad = age) %>%   head() #>  #> // linelist object #>   case_ID date_of_prodrome gender edad #> 1       1       1861-11-21      f    7 #> 2       2       1861-11-23      f    6 #> 3       3       1861-11-28      f    4 #> 4       4       1861-11-27      m   13 #> 5       5       1861-11-22      f    8 #> 6       6       1861-11-26      m   12 #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:edad  # Instead, split the selecting and renaming steps: x %>%   select(case_ID, date_of_prodrome, gender, age) %>%   rename(edad = age) %>%   head() #>  #> // linelist object #>   case_ID date_of_prodrome gender edad #> 1       1       1861-11-21      f    7 #> 2       2       1861-11-23      f    6 #> 3       3       1861-11-28      f    4 #> 4       4       1861-11-27      m   13 #> 5       5       1861-11-22      f    8 #> 6       6       1861-11-26      m   12 #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:edad"},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"verbs-operating-on-groups","dir":"Articles","previous_headings":"","what":"Verbs operating on groups ✘","title":"Compatibility with dplyr","text":"Groups yet supported. Applying verb operating group linelist silently convert back data.frame tibble.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"dplyrbind_rows","dir":"Articles","previous_headings":"Verbs operating on data.frames","what":"dplyr::bind_rows() ✅","title":"Compatibility with dplyr","text":"","code":"dim(x) #> [1] 188  12  dim(bind_rows(x, x)) #> [1] 376  12"},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"dplyrbind_cols","dir":"Articles","previous_headings":"Verbs operating on data.frames","what":"dplyr::bind_cols() ✘","title":"Compatibility with dplyr","text":"bind_cols() currently incompatible linelist: Tags second element lost Warnings produced lost tagged, even tags actually lost","code":"bind_cols(   suppressWarnings(select(x, case_ID, date_of_prodrome)),   suppressWarnings(select(x, age, gender)) ) %>%   head() #> Warning in prune_tags(out, lost_action): The following tags have lost their variable: #>  id:case_ID, date_onset:date_of_prodrome #> Warning in prune_tags(out, lost_action): The following tags have lost their variable: #>  gender:gender, age:age #>  #> // linelist object #>   case_ID date_of_prodrome age gender #> 1       1       1861-11-21   7      f #> 2       2       1861-11-23   6      f #> 3       3       1861-11-28   4      f #> 4       4       1861-11-27  13      m #> 5       5       1861-11-22   8      f #> 6       6       1861-11-26  12      m #>  #> // tags: id:case_ID, date_onset:date_of_prodrome"},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"joins","dir":"Articles","previous_headings":"Verbs operating on data.frames","what":"Joins ✘","title":"Compatibility with dplyr","text":"Joins currently compatible linelist tags second element silently dropped.","code":"full_join(   suppressWarnings(select(x, case_ID, date_of_prodrome)),   suppressWarnings(select(x, case_ID, age, gender)) ) %>%   head() #> Joining with `by = join_by(case_ID)` #>  #> // linelist object #>   case_ID date_of_prodrome age gender #> 1       1       1861-11-21   7      f #> 2       2       1861-11-23   6      f #> 3       3       1861-11-28   4      f #> 4       4       1861-11-27  13      m #> 5       5       1861-11-22   8      f #> 6       6       1861-11-26  12      m #>  #> // tags: id:case_ID, date_onset:date_of_prodrome"},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html","id":"dplyrpick","dir":"Articles","previous_headings":"Verbs operating on multiple columns","what":"dplyr::pick() ✘","title":"Compatibility with dplyr","text":"pick() makes tidyselect functions work usually tidyselect-incompatible functions, : , expect work linelist custom tidyselect-like function: has_tag() ’s case since pick() currently strips attributes, including linelist class tags. unclassing documented ?pick: pick() returns data frame containing selected columns current group.","code":"x %>%   dplyr::arrange(dplyr::pick(ends_with(\"loc\"))) %>%   head() #>  #> // linelist object #>   case_ID infector date_of_prodrome date_of_rash date_of_death age gender #> 1      26       45       1861-11-22   1861-11-27          <NA>   7      m #> 2      28      180       1861-11-25   1861-11-30          <NA>  10      f #> 3     146      172       1861-12-01   1861-12-07          <NA>   4      f #> 4     147       18       1861-12-03   1861-12-07          <NA>   0      f #> 5     176      146       1861-12-11   1861-12-15          <NA>   0   <NA> #> 6     115       16       1861-12-01   1861-12-07          <NA>  11      f #>   family_ID class complications x_loc y_loc #> 1        67     1           yes   7.5  37.5 #> 2        65     2           yes  15.0  47.5 #> 3        13     0           yes  72.5 152.5 #> 4        13     0           yes  72.5 152.5 #> 5        64     0           yes  72.5 152.5 #> 6        66     2           yes  75.0  20.0 #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:age"},{"path":"https://epiverse-trace.github.io/linelist/articles/linelist.html","id":"motivations","dir":"Articles","previous_headings":"","what":"Motivations","title":"An introduction to linelist","text":"Outbreak analytics pipelines often start case line lists, data tables every line different case/patient, columns record different variables potential epidemiological interest date events (e.g. onset symptom, case notification), disease outcome, patient data (e.g. age, sex, occupation). data typically held data.frame (tibble) used various downstream analysis. approach functional, often means analysis step : need check required inputs present data, user specify (e.g. ‘column dates onset stored.’) need validate required data (e.g. ‘Check field storing dates onset indeed dates, character.’) aim linelist take care pre-requisites downstream analyses, thus helping make data pipelines robust straightforward.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/articles/linelist.html","id":"outline","dir":"Articles","previous_headings":"linelist in a nutshell","what":"Outline","title":"An introduction to linelist","text":"linelist R package implements basic data representation case line lists, alongside accessors basic methods. essentially provides three types functionalities: tagging: tags system permits pre-identify key epidemiological variables needed downstream analyses (e.g. dates case notification, symptom onset, age, gender, disease outcome) validation: functions checking tagged variables indeed present data.frame/tibble, expected type (e.g. checking dates Date, integer numeric) secured methods: generic functions lead loss tagged variables dedicated methods linelist objects adapted behaviours, either updating tags needed (e.g. rename(), names() <-    ...) issuing warnings/errors tagged variables lost (e.g. select(), x[], x[[]])","code":""},{"path":"https://epiverse-trace.github.io/linelist/articles/linelist.html","id":"should-i-use-linelist","dir":"Articles","previous_headings":"linelist in a nutshell","what":"Should I use linelist?","title":"An introduction to linelist","text":"linelist designed add robust, foundational layer data pipelines, might add unnecessary complexity analysis scripts. hints gauge consider using package. may use linelist …: data changes/updates time (e.g. new entries, new variables, renamed variables) build data pipelines entailing multiple layers data processing analysis looking build re-useable analysis scripts, .e. work datasets minimal added changes Conversely, probably need …: work historical data, likely already curated/validated longer change perform quick, simple analysis data, need expand later analysis scripts specific re-used elsewhere","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/articles/linelist.html","id":"installation","dir":"Articles","previous_headings":"Getting started","what":"Installation","title":"An introduction to linelist","text":"stable versions released periodically CRAN, can installed using: prefer using latest features bug fixes, can alternatively install development version linelist GitHub using following commands: installed, can load package R session using:","code":"install.packages(\"linelist\", build_vignettes = TRUE) if (!require(remotes)) {   install.packages(\"remotes\") } remotes::install_github(\"epiverse-trace/linelist\", build_vignettes = TRUE) library(linelist)"},{"path":"https://epiverse-trace.github.io/linelist/articles/linelist.html","id":"key-functionalities","dir":"Articles","previous_headings":"Getting started","what":"Key functionalities","title":"An introduction to linelist","text":"linelist object instance data.frame tibble key epidemiological variables tagged. main features packages broken 3 categories outlined .","code":""},{"path":"https://epiverse-trace.github.io/linelist/articles/linelist.html","id":"tagging-system","dir":"Articles","previous_headings":"Getting started > Key functionalities","what":"Tagging system","title":"An introduction to linelist","text":"Tags paired keys pointing reference epidemiological variables name column data.frame tibble. tagging system permits construct linelist objects, modify tags existing objects, check access existing tags corresponding variables. make_linelist(): create linelist object tagging key epi variables data.frame tibble set_tags(): add, remove, modify tags linelist tags(): list variables tagged linelist tags_names(): list recognized tag names; details tags represent can found ?make_linelist tags_df(): obtain data.frame tagged variables linelist","code":""},{"path":"https://epiverse-trace.github.io/linelist/articles/linelist.html","id":"validation","dir":"Articles","previous_headings":"Getting started > Key functionalities","what":"Validation","title":"An introduction to linelist","text":"Basic routines provided validate linelist objects. advanced validation e.g. looking compatibility dated events implemented separate package. validate_tags(): check tagged variables present dataset, tags match pre-defined list tagged variables validate_types(): check tagged variables acceptable class, defined tags_types() validate_linelist(): general validation linelist objects, equivalent running validate_tags() validate_types(), checking class object","code":""},{"path":"https://epiverse-trace.github.io/linelist/articles/linelist.html","id":"secured-methods","dir":"Articles","previous_headings":"Getting started > Key functionalities","what":"Secured methods","title":"An introduction to linelist","text":"dedicated S3 methods existing generics can used prevent loss tagged variables. lost_tags_action(): set behaviour adopt tagged variables lost operation: issue warning (default), error, ignore get_lost_tags_action(): check current behaviour lost tagged variables names<-(): ‘base R’ approach renaming columns linelist; rename tags needed match new column names x[] x[[]]: subsetting columns using ‘base R’ syntax; behave according get_lost_tags_actions() tagged variables lost","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/articles/linelist.html","id":"example-dataset","dir":"Articles","previous_headings":"Worked example","what":"Example dataset","title":"An introduction to linelist","text":"example, use case line list Hagelloch 1861 measles outbreak, distributed outbreaks package measles_hagelloch_1861 .","code":"data(measles_hagelloch_1861, package = \"outbreaks\")  # overview of the data head(measles_hagelloch_1861) #>   case_ID infector date_of_prodrome date_of_rash date_of_death age gender #> 1       1       45       1861-11-21   1861-11-25          <NA>   7      f #> 2       2       45       1861-11-23   1861-11-27          <NA>   6      f #> 3       3      172       1861-11-28   1861-12-02          <NA>   4      f #> 4       4      180       1861-11-27   1861-11-28          <NA>  13      m #> 5       5       45       1861-11-22   1861-11-27          <NA>   8      f #> 6       6      180       1861-11-26   1861-11-29          <NA>  12      m #>   family_ID class complications x_loc y_loc #> 1        41     1           yes 142.5 100.0 #> 2        41     1           yes 142.5 100.0 #> 3        41     0           yes 142.5 100.0 #> 4        61     2           yes 165.0 102.5 #> 5        42     1           yes 145.0 120.0 #> 6        42     2           yes 145.0 120.0"},{"path":"https://epiverse-trace.github.io/linelist/articles/linelist.html","id":"creating-a-linelist-object","dir":"Articles","previous_headings":"Worked example","what":"Creating a linelist object","title":"An introduction to linelist","text":"Let us assume want tag following variables facilitate downstream analyses, checked tag name ?make_linelist: date symptom onset, called prodrome (tag: date_onset) date death (tag: date_death) age patient (tag: age) gender patient (tag: gender) first load useful packages, create linelist information: printing object confirms tags added. want double-check variables tagged:","code":"library(tibble) # data.frame but with nice printing library(dplyr) # for data handling #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(magrittr) # for the %>% operator library(linelist) # this package!  x <- measles_hagelloch_1861 %>%   tibble() %>%   make_linelist(date_onset = \"date_of_prodrome\",                 date_death = \"date_of_death\",                 age = \"age\",                 gender = \"gender\") head(x) #>  #> // linelist object #> # A tibble: 6 × 12 #>   case_ID infector date_of_prodrome date_of_rash date_of_death   age gender #>     <int>    <int> <date>           <date>       <date>        <dbl> <fct>  #> 1       1       45 1861-11-21       1861-11-25   NA                7 f      #> 2       2       45 1861-11-23       1861-11-27   NA                6 f      #> 3       3      172 1861-11-28       1861-12-02   NA                4 f      #> 4       4      180 1861-11-27       1861-11-28   NA               13 m      #> 5       5       45 1861-11-22       1861-11-27   NA                8 f      #> 6       6      180 1861-11-26       1861-11-29   NA               12 m      #> # ℹ 5 more variables: family_ID <int>, class <fct>, complications <fct>, #> #   x_loc <dbl>, y_loc <dbl> #>  #> // tags: date_onset:date_of_prodrome, date_death:date_of_death, gender:gender, age:age tags(x) #> $date_onset #> [1] \"date_of_prodrome\" #>  #> $date_death #> [1] \"date_of_death\" #>  #> $gender #> [1] \"gender\" #>  #> $age #> [1] \"age\""},{"path":"https://epiverse-trace.github.io/linelist/articles/linelist.html","id":"changing-tags","dir":"Articles","previous_headings":"Worked example","what":"Changing tags","title":"An introduction to linelist","text":"Tags can added / removed / changed using set_tags(). Let us assume also want record outcome: currently missing, can built dates deaths (missing date = survived). can done using mutate() x create new variable (remember x linelist, also regular tibble compatible dplyr verbs), setting new tag using set_tags(): wanted undo , .e. remove outcome tag, need set NULL:","code":"x <- x %>%   mutate(     inferred_outcome = if_else(is.na(date_of_death), \"survived\", \"died\")   ) %>%   set_tags(outcome = \"inferred_outcome\") x #>  #> // linelist object #> # A tibble: 188 × 13 #>    case_ID infector date_of_prodrome date_of_rash date_of_death   age gender #>      <int>    <int> <date>           <date>       <date>        <dbl> <fct>  #>  1       1       45 1861-11-21       1861-11-25   NA                7 f      #>  2       2       45 1861-11-23       1861-11-27   NA                6 f      #>  3       3      172 1861-11-28       1861-12-02   NA                4 f      #>  4       4      180 1861-11-27       1861-11-28   NA               13 m      #>  5       5       45 1861-11-22       1861-11-27   NA                8 f      #>  6       6      180 1861-11-26       1861-11-29   NA               12 m      #>  7       7       42 1861-11-24       1861-11-28   NA                6 m      #>  8       8       45 1861-11-21       1861-11-26   NA               10 m      #>  9       9      182 1861-11-26       1861-11-30   NA               13 m      #> 10      10       45 1861-11-21       1861-11-25   NA                7 f      #> # ℹ 178 more rows #> # ℹ 6 more variables: family_ID <int>, class <fct>, complications <fct>, #> #   x_loc <dbl>, y_loc <dbl>, inferred_outcome <chr> #>  #> // tags: date_onset:date_of_prodrome, date_death:date_of_death, gender:gender, age:age, outcome:inferred_outcome x <- x %>%   set_tags(outcome = NULL) tags(x) #> $date_onset #> [1] \"date_of_prodrome\" #>  #> $date_death #> [1] \"date_of_death\" #>  #> $gender #> [1] \"gender\" #>  #> $age #> [1] \"age\""},{"path":"https://epiverse-trace.github.io/linelist/articles/linelist.html","id":"accessing-tagged-variables","dir":"Articles","previous_headings":"Worked example","what":"Accessing tagged variables","title":"An introduction to linelist","text":"Now key variables tagged x, can used pre-defined fields downstream analyses, without worry variable names types. access tagged variables using following means:","code":"# select tagged variables only x %>%   select(has_tag(c(\"date_onset\", \"date_death\"))) #> Warning in prune_tags(out, lost_action): The following tags have lost their variable: #>  gender:gender, age:age #>  #> // linelist object #> # A tibble: 188 × 2 #>    date_of_prodrome date_of_death #>    <date>           <date>        #>  1 1861-11-21       NA            #>  2 1861-11-23       NA            #>  3 1861-11-28       NA            #>  4 1861-11-27       NA            #>  5 1861-11-22       NA            #>  6 1861-11-26       NA            #>  7 1861-11-24       NA            #>  8 1861-11-21       NA            #>  9 1861-11-26       NA            #> 10 1861-11-21       NA            #> # ℹ 178 more rows #>  #> // tags: date_onset:date_of_prodrome, date_death:date_of_death  # select tagged variables only with renaming on the fly x %>%   select(onset = has_tag(\"date_onset\")) #> Warning in prune_tags(out, lost_action): The following tags have lost their variable: #>  date_death:date_of_death, gender:gender, age:age #>  #> // linelist object #> # A tibble: 188 × 1 #>    onset      #>    <date>     #>  1 1861-11-21 #>  2 1861-11-23 #>  3 1861-11-28 #>  4 1861-11-27 #>  5 1861-11-22 #>  6 1861-11-26 #>  7 1861-11-24 #>  8 1861-11-21 #>  9 1861-11-26 #> 10 1861-11-21 #> # ℹ 178 more rows #>  #> // tags: date_onset:onset  # get all tagged variables in a data.frame x %>%   tags_df() #> # A tibble: 188 × 4 #>    date_onset date_death gender   age #>    <date>     <date>     <fct>  <dbl> #>  1 1861-11-21 NA         f          7 #>  2 1861-11-23 NA         f          6 #>  3 1861-11-28 NA         f          4 #>  4 1861-11-27 NA         m         13 #>  5 1861-11-22 NA         f          8 #>  6 1861-11-26 NA         m         12 #>  7 1861-11-24 NA         m          6 #>  8 1861-11-21 NA         m         10 #>  9 1861-11-26 NA         m         13 #> 10 1861-11-21 NA         f          7 #> # ℹ 178 more rows"},{"path":"https://epiverse-trace.github.io/linelist/articles/linelist.html","id":"using-safeguards","dir":"Articles","previous_headings":"Worked example","what":"Using safeguards","title":"An introduction to linelist","text":"x remains valid tibble, can use data handling operations implemented dplyr. However, operations may cause accidental removal key tagged variables. linelist provides safeguard mechanism . instance, let’s assume want select columns x: , command gave meaningful warning, select() removes variables tagged. can also use has_tag() select helper select columns via tag. example, retain first 2 variables, gender tag: , observe warning due loss tagged variables operation. behaviour can silenced needed, changed issue error (stronger pipelines instance):","code":"# hybrid selection x %>%   select(1:2) #> Warning in prune_tags(out, lost_action): The following tags have lost their variable: #>  date_onset:date_of_prodrome, date_death:date_of_death, gender:gender, age:age #>  #> // linelist object #> # A tibble: 188 × 2 #>    case_ID infector #>      <int>    <int> #>  1       1       45 #>  2       2       45 #>  3       3      172 #>  4       4      180 #>  5       5       45 #>  6       6      180 #>  7       7       42 #>  8       8       45 #>  9       9      182 #> 10      10       45 #> # ℹ 178 more rows #>  #> // tags: [no tagged variable] # hybrid selection x %>%   select(1:2, has_tag(\"gender\")) #> Warning in prune_tags(out, lost_action): The following tags have lost their variable: #>  date_onset:date_of_prodrome, date_death:date_of_death, age:age #>  #> // linelist object #> # A tibble: 188 × 3 #>    case_ID infector gender #>      <int>    <int> <fct>  #>  1       1       45 f      #>  2       2       45 f      #>  3       3      172 f      #>  4       4      180 m      #>  5       5       45 f      #>  6       6      180 m      #>  7       7       42 m      #>  8       8       45 m      #>  9       9      182 m      #> 10      10       45 f      #> # ℹ 178 more rows #>  #> // tags: gender:gender # hybrid selection x %>%   select(1:2, has_tag(\"gender\")) #> Warning in prune_tags(out, lost_action): The following tags have lost their variable: #>  date_onset:date_of_prodrome, date_death:date_of_death, age:age #>  #> // linelist object #> # A tibble: 188 × 3 #>    case_ID infector gender #>      <int>    <int> <fct>  #>  1       1       45 f      #>  2       2       45 f      #>  3       3      172 f      #>  4       4      180 m      #>  5       5       45 f      #>  6       6      180 m      #>  7       7       42 m      #>  8       8       45 m      #>  9       9      182 m      #> 10      10       45 f      #> # ℹ 178 more rows #>  #> // tags: gender:gender  # hybrid selection - no warning lost_tags_action(\"none\") #> Lost tags will now be ignored.  x %>%   select(1:2, has_tag(\"gender\")) #>  #> // linelist object #> # A tibble: 188 × 3 #>    case_ID infector gender #>      <int>    <int> <fct>  #>  1       1       45 f      #>  2       2       45 f      #>  3       3      172 f      #>  4       4      180 m      #>  5       5       45 f      #>  6       6      180 m      #>  7       7       42 m      #>  8       8       45 m      #>  9       9      182 m      #> 10      10       45 f      #> # ℹ 178 more rows #>  #> // tags: gender:gender  # hybrid selection - error due to lost tags lost_tags_action(\"error\") #> Lost tags will now issue an error.  x %>%   select(1:2, has_tag(\"gender\")) #> Error in prune_tags(out, lost_action): The following tags have lost their variable: #>  date_onset:date_of_prodrome, date_death:date_of_death, age:age  # note that `lost_tags_action` sets the behavior for any later operation, so we # need to reset the default get_lost_tags_action() # check current behaviour #> [1] \"error\" lost_tags_action() # reset default #> Lost tags will now issue a warning."},{"path":"https://epiverse-trace.github.io/linelist/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hugo Gruson. Author, maintainer. Thibaut Jombart. Author, conceptor. Tim Taylor. Contributor. Chris Hartgerink. Reviewer.","code":""},{"path":"https://epiverse-trace.github.io/linelist/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gruson H, Jombart T (2024). linelist: Tagging Validating Epidemiological Data. R package version 1.0.0.9000, https://github.com/epiverse-trace/linelist, https://epiverse-trace.github.io/linelist/.","code":"@Manual{,   title = {linelist: Tagging and Validating Epidemiological Data},   author = {Hugo Gruson and Thibaut Jombart},   year = {2024},   note = {R package version 1.0.0.9000, https://github.com/epiverse-trace/linelist},   url = {https://epiverse-trace.github.io/linelist/}, }"},{"path":"https://epiverse-trace.github.io/linelist/index.html","id":"linelist-tagging-and-validating-epidemiological-data-","dir":"","previous_headings":"","what":"Tagging and Validating Epidemiological Data","title":"Tagging and Validating Epidemiological Data","text":"linelist provides safe entry point Epiverse software ecosystem, adding foundational layer tagging, validation, safeguarding epidemiological data, help make data pipelines straightforward robust.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/index.html","id":"stable-version","dir":"","previous_headings":"Installation","what":"Stable version","title":"Tagging and Validating Epidemiological Data","text":"stable versions released CRAN, can installed using:","code":"install.packages(\"linelist\", build_vignettes = TRUE)"},{"path":"https://epiverse-trace.github.io/linelist/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Tagging and Validating Epidemiological Data","text":"development version linelist can installed GitHub :","code":"if (!require(remotes)) {   install.packages(\"remotes\") } remotes::install_github(\"epiverse-trace/linelist\", build_vignettes = TRUE)"},{"path":"https://epiverse-trace.github.io/linelist/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Tagging and Validating Epidemiological Data","text":"linelist works tagging key epidemiological data data.frame tibble facilitate strengthen data pipelines. resulting object linelist object, extends data.frame (tibble) providing three types features: tagging system identify key data, enabling access data using tags rather actual names, may change time across datasets validation tagged variables (making sure present right type/class) safeguards accidental losses tagged variables common data handling operations short example illustrates different features. See Documentation section -depth examples details linelist objects. validate_linelist() error one tagged column doesn’t correct type: stronger pipelines, can even trigger errors upon loss: Alternatively, content can accessed tags: linelist can also connected incidence2 package pipelines focused aggregated count data:","code":"# load packages and a dataset for the example # ------------------------------------------- library(linelist) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  dataset <- outbreaks::mers_korea_2015$linelist head(dataset) #>     id age age_class sex        place_infect reporting_ctry #> 1 SK_1  68     60-69   M         Middle East    South Korea #> 2 SK_2  63     60-69   F Outside Middle East    South Korea #> 3 SK_3  76     70-79   M Outside Middle East    South Korea #> 4 SK_4  46     40-49   F Outside Middle East    South Korea #> 5 SK_5  50     50-59   M Outside Middle East    South Korea #> 6 SK_6  71     70-79   M Outside Middle East    South Korea #>                                              loc_hosp   dt_onset  dt_report #> 1 Pyeongtaek St. Mary, Hospital, Pyeongtaek, Gyeonggi 2015-05-11 2015-05-19 #> 2 Pyeongtaek St. Mary, Hospital, Pyeongtaek, Gyeonggi 2015-05-18 2015-05-20 #> 3 Pyeongtaek St. Mary, Hospital, Pyeongtaek, Gyeonggi 2015-05-20 2015-05-20 #> 4 Pyeongtaek St. Mary, Hospital, Pyeongtaek, Gyeonggi 2015-05-25 2015-05-26 #> 5                           365 Yeollin Clinic, Seoul 2015-05-25 2015-05-27 #> 6 Pyeongtaek St. Mary, Hospital, Pyeongtaek, Gyeonggi 2015-05-24 2015-05-28 #>   week_report dt_start_exp dt_end_exp    dt_diag outcome   dt_death #> 1     2015_21   2015-04-18 2015-05-04 2015-05-20   Alive       <NA> #> 2     2015_21   2015-05-15 2015-05-20 2015-05-20   Alive       <NA> #> 3     2015_21   2015-05-16 2015-05-16 2015-05-21    Dead 2015-06-04 #> 4     2015_22   2015-05-16 2015-05-20 2015-05-26   Alive       <NA> #> 5     2015_22   2015-05-17 2015-05-17 2015-05-26   Alive       <NA> #> 6     2015_22   2015-05-15 2015-05-17 2015-05-28    Dead 2015-06-01  # check known tagged variables # ---------------------------- tags_names() #>  [1] \"id\"             \"date_onset\"     \"date_reporting\" \"date_admission\" #>  [5] \"date_discharge\" \"date_outcome\"   \"date_death\"     \"gender\"         #>  [9] \"age\"            \"location\"       \"occupation\"     \"hcw\"            #> [13] \"outcome\"  # build a linelist # ---------------- x <- dataset %>%   tibble() %>%   make_linelist(     date_onset = \"dt_onset\", # date of onset     date_reporting = \"dt_report\", # date of reporting     occupation = \"age\" # mistake   ) x #>  #> // linelist object #> # A tibble: 162 × 15 #>    id      age age_class sex   place_infect   reporting_ctry loc_hosp dt_onset   #>    <chr> <int> <chr>     <fct> <fct>          <fct>          <fct>    <date>     #>  1 SK_1     68 60-69     M     Middle East    South Korea    Pyeongt… 2015-05-11 #>  2 SK_2     63 60-69     F     Outside Middl… South Korea    Pyeongt… 2015-05-18 #>  3 SK_3     76 70-79     M     Outside Middl… South Korea    Pyeongt… 2015-05-20 #>  4 SK_4     46 40-49     F     Outside Middl… South Korea    Pyeongt… 2015-05-25 #>  5 SK_5     50 50-59     M     Outside Middl… South Korea    365 Yeo… 2015-05-25 #>  6 SK_6     71 70-79     M     Outside Middl… South Korea    Pyeongt… 2015-05-24 #>  7 SK_7     28 20-29     F     Outside Middl… South Korea    Pyeongt… 2015-05-21 #>  8 SK_8     46 40-49     F     Outside Middl… South Korea    Seoul C… 2015-05-26 #>  9 SK_9     56 50-59     M     Outside Middl… South Korea    Pyeongt… NA         #> 10 SK_10    44 40-49     M     Outside Middl… China          Pyeongt… 2015-05-21 #> # ℹ 152 more rows #> # ℹ 7 more variables: dt_report <date>, week_report <fct>, dt_start_exp <date>, #> #   dt_end_exp <date>, dt_diag <date>, outcome <fct>, dt_death <date> #>  #> // tags: date_onset:dt_onset, date_reporting:dt_report, occupation:age tags(x) # check available tags #> $date_onset #> [1] \"dt_onset\" #>  #> $date_reporting #> [1] \"dt_report\" #>  #> $occupation #> [1] \"age\" # validation of tagged variables # ------------------------------ ## (this flags a likely mistake: occupation should not be an integer) validate_linelist(x) #> Error in validate_types(x, ref_types): Issue when checking class of tag `occupation`: #> Must inherit from class 'character'/'factor', but has class 'integer' # change tags: fix mistakes, add new ones # --------------------------------------- x <- x %>%   set_tags(     occupation = NULL, # tag removal     gender = \"sex\", # new tag     outcome = \"outcome\"   )  # safeguards against actions losing tags # -------------------------------------- ## attemping to remove geographical info but removing dates by mistake x_no_geo <- x %>%   select(-(5:8)) #> Warning in prune_tags(out, lost_action): The following tags have lost their variable: #>  date_onset:dt_onset lost_tags_action(\"error\") #> Lost tags will now issue an error.  x_no_geo <- x %>%   select(-(5:8)) #> Error in prune_tags(out, lost_action): The following tags have lost their variable: #>  date_onset:dt_onset  x_no_geo <- x %>%   select(-(5:7))  ## to revert to default behaviour (warning upon error) lost_tags_action() #> Lost tags will now issue a warning. x_no_geo %>%   select(has_tag(c(\"date_onset\", \"outcome\"))) #> Warning in prune_tags(out, lost_action): The following tags have lost their variable: #>  date_reporting:dt_report, gender:sex #>  #> // linelist object #> # A tibble: 162 × 2 #>    dt_onset   outcome #>    <date>     <fct>   #>  1 2015-05-11 Alive   #>  2 2015-05-18 Alive   #>  3 2015-05-20 Dead    #>  4 2015-05-25 Alive   #>  5 2015-05-25 Alive   #>  6 2015-05-24 Dead    #>  7 2015-05-21 Alive   #>  8 2015-05-26 Alive   #>  9 NA         Alive   #> 10 2015-05-21 Alive   #> # ℹ 152 more rows #>  #> // tags: date_onset:dt_onset, outcome:outcome  x_no_geo %>%   tags_df() #> # A tibble: 162 × 4 #>    date_onset date_reporting gender outcome #>    <date>     <date>         <fct>  <fct>   #>  1 2015-05-11 2015-05-19     M      Alive   #>  2 2015-05-18 2015-05-20     F      Alive   #>  3 2015-05-20 2015-05-20     M      Dead    #>  4 2015-05-25 2015-05-26     F      Alive   #>  5 2015-05-25 2015-05-27     M      Alive   #>  6 2015-05-24 2015-05-28     M      Dead    #>  7 2015-05-21 2015-05-28     F      Alive   #>  8 2015-05-26 2015-05-29     F      Alive   #>  9 NA         2015-05-29     M      Alive   #> 10 2015-05-21 2015-05-29     M      Alive   #> # ℹ 152 more rows library(incidence2) #> Loading required package: grates  x_no_geo %>%   tags_df() %>%   incidence(\"date_onset\", groups = c(\"gender\", \"outcome\")) %>%   plot(     fill = \"outcome\",     angle = 45,     nrow = 2,     border_colour = \"white\",     legend = \"bottom\"   )"},{"path":"https://epiverse-trace.github.io/linelist/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Tagging and Validating Epidemiological Data","text":"detailed documentation can found : https://epiverse-trace.github.io/linelist/ particular: general introduction linelist (link) reference manual (link)","code":""},{"path":"https://epiverse-trace.github.io/linelist/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Tagging and Validating Epidemiological Data","text":"ask questions give us feedback, please use github issues system.","code":""},{"path":"https://epiverse-trace.github.io/linelist/index.html","id":"data-privacy","dir":"","previous_headings":"","what":"Data privacy","title":"Tagging and Validating Epidemiological Data","text":"Case line lists may contain personally identifiable information (PII). linelist provides way store data R, currently provide tools data anonymization. user responsible respecting individual privacy ensuring PII handled required level confidentiality, compliance applicable laws regulations storing sharing PII. Note PII rarely needed common analytics tasks, many instances may advisable remove PII data sharing analytics teams.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/index.html","id":"lifecycle","dir":"","previous_headings":"Development","what":"Lifecycle","title":"Tagging and Validating Epidemiological Data","text":"package currently experimental, defined RECON software lifecycle. means essential features mechanisms change drastically, depending user feedback, functions may renamed, arguments may change, functionalities may added, etc.","code":""},{"path":"https://epiverse-trace.github.io/linelist/index.html","id":"contributions","dir":"","previous_headings":"Development","what":"Contributions","title":"Tagging and Validating Epidemiological Data","text":"Contributions welcome via pull requests.","code":""},{"path":"https://epiverse-trace.github.io/linelist/index.html","id":"code-of-conduct","dir":"","previous_headings":"Development","what":"Code of Conduct","title":"Tagging and Validating Epidemiological Data","text":"Please note linelist project released Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://epiverse-trace.github.io/linelist/index.html","id":"notes","dir":"","previous_headings":"Development","what":"Notes","title":"Tagging and Validating Epidemiological Data","text":"package reboot RECON package linelist. Unlike predecessor, new package focuses implementation linelist class. data cleaning features original package eventually re-implemented linelist objects, albeit likely separate package.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/has_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"A selector function to use in tidyverse functions — has_tag","title":"A selector function to use in tidyverse functions — has_tag","text":"selector function use tidyverse functions","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/has_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A selector function to use in tidyverse functions — has_tag","text":"","code":"has_tag(tags)"},{"path":"https://epiverse-trace.github.io/linelist/reference/has_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A selector function to use in tidyverse functions — has_tag","text":"tags character vector tags listing variables want operate ","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/has_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A selector function to use in tidyverse functions — has_tag","text":"numeric vector containing position columns requested tags","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/has_tag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A selector function to use in tidyverse functions — has_tag","text":"","code":"if (require(outbreaks) && require(dplyr)) {    ## dataset we'll create a linelist from   measles_hagelloch_1861    ## create linelist   x <- make_linelist(measles_hagelloch_1861,     id = \"case_ID\",     date_onset = \"date_of_prodrome\",     age = \"age\",     gender = \"gender\"   )   head(x)    x %>%     select(has_tag(c(\"id\", \"age\"))) %>%     head() } #> Loading required package: outbreaks #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Warning: The following tags have lost their variable: #>  date_onset:date_of_prodrome, gender:gender #>  #> // linelist object #>   case_ID age #> 1       1   7 #> 2       2   6 #> 3       3   4 #> 4       4  13 #> 5       5   8 #> 6       6  12 #>  #> // tags: id:case_ID, age:age"},{"path":"https://epiverse-trace.github.io/linelist/reference/linelist-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Base Tools for Storing and Handling Case Line Lists — linelist-package","title":"Base Tools for Storing and Handling Case Line Lists — linelist-package","text":"linelist package provides tools help storing handling case line list data. linelist class adds tagging system classical data.frame tibble objects permits identify key epidemiological data dates symptom onset, epi case definition, age, gender disease outcome. tagged, variables can seamlessly used downstream analyses, making data pipelines robust reliable.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/linelist-package.html","id":"main-functions","dir":"Reference","previous_headings":"","what":"Main functions","title":"Base Tools for Storing and Handling Case Line Lists — linelist-package","text":"make_linelist(): create linelist objects data.frame tibble, possibility tag key epi variables set_tags(): change add tagged variables linelist tags(): get list tags linelist tags_df(): get data.frame tagged variables lost_tags_action(): change behaviour actions tagged variables lost (e.g. removing columns storing tagged variables) issue warnings, errors, nothing get_lost_tags_action(): check current behaviour actions tagged variables lost","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/linelist-package.html","id":"dedicated-methods","dir":"Reference","previous_headings":"","what":"Dedicated methods","title":"Base Tools for Storing and Handling Case Line Lists — linelist-package","text":"Specific methods commonly used handle data.frame provided linelist objects, typically help flag prevent actions alter lose tagged variables (may thus break downstream data pipelines). names() <- rename (see dplyr::rename()): rename tags needed x[...] <- x[[...]] <- (see sub_linelist): adopt desired behaviour tagged variables lost print(): prints info linelist addition data.frame tibble","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/reference/linelist-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Base Tools for Storing and Handling Case Line Lists — linelist-package","text":"Maintainer: Hugo Gruson hugo@data.org (ORCID) Authors: Thibaut Jombart [conceptor] contributors: Tim Taylor [contributor] Chris Hartgerink (ORCID) [reviewer]","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/linelist-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Base Tools for Storing and Handling Case Line Lists — linelist-package","text":"","code":"if (require(outbreaks)) {   # using base R style    ## dataset we'll create a linelist from, only using the first 50 entries   measles_hagelloch_1861[1:50, ]    ## create linelist   x <- make_linelist(measles_hagelloch_1861[1:50, ],     id = \"case_ID\",     date_onset = \"date_of_prodrome\",     age = \"age\",     gender = \"gender\"   )   x    ## check tagged variables   tags(x)    ## robust renaming   names(x)[1] <- \"identifier\"   x    ## example of dropping tags by mistake - default: warning   x[, 2:5]    ## to silence warnings when taggs are dropped   lost_tags_action(\"none\")   x[, 2:5]    ## to trigger errors when taggs are dropped   # lost_tags_action(\"error\")   # x[, 2:5]    ## reset default behaviour   lost_tags_action()     # using tidyverse style    ## example of creating a linelist, adding a new variable, and adding a tag   ## for it    if (require(dplyr) && require(magrittr)) {     x <- measles_hagelloch_1861 %>%       tibble() %>%       make_linelist(         id = \"case_ID\",         date_onset = \"date_of_prodrome\",         age = \"age\",         gender = \"gender\"       ) %>%       mutate(result = if_else(is.na(date_of_death), \"survived\", \"died\")) %>%       set_tags(outcome = \"result\") %>%       rename(identifier = case_ID)      head(x)      ## extract tagged variables     x %>%       select(has_tag(c(\"gender\", \"age\")))      x %>%       tags()      x %>%       select(starts_with(\"date\"))   } } #> Warning: The following tags have lost their variable: #>  id:identifier, gender:gender, age:age #> Lost tags will now be ignored. #> Lost tags will now issue a warning. #> Loading required package: magrittr #> Warning: The following tags have lost their variable: #>  id:identifier, date_onset:date_of_prodrome, outcome:result #> Warning: The following tags have lost their variable: #>  id:identifier, gender:gender, age:age, outcome:result #>  #> // linelist object #> # A tibble: 188 × 3 #>    date_of_prodrome date_of_rash date_of_death #>    <date>           <date>       <date>        #>  1 1861-11-21       1861-11-25   NA            #>  2 1861-11-23       1861-11-27   NA            #>  3 1861-11-28       1861-12-02   NA            #>  4 1861-11-27       1861-11-28   NA            #>  5 1861-11-22       1861-11-27   NA            #>  6 1861-11-26       1861-11-29   NA            #>  7 1861-11-24       1861-11-28   NA            #>  8 1861-11-21       1861-11-26   NA            #>  9 1861-11-26       1861-11-30   NA            #> 10 1861-11-21       1861-11-25   NA            #> # ℹ 178 more rows #>  #> // tags: date_onset:date_of_prodrome"},{"path":"https://epiverse-trace.github.io/linelist/reference/lost_tags_action.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and set behaviour for lost tags — lost_tags_action","title":"Check and set behaviour for lost tags — lost_tags_action","text":"function determines behaviour adopt tagged variables linelist lost e.g. subsetting. achieved using options defined linelist package. function can used isolation, can also accept dataset first argument, can used pipelines well.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/lost_tags_action.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and set behaviour for lost tags — lost_tags_action","text":"","code":"lost_tags_action(action = c(\"warning\", \"error\", \"none\"), quiet = FALSE, x)  get_lost_tags_action()"},{"path":"https://epiverse-trace.github.io/linelist/reference/lost_tags_action.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and set behaviour for lost tags — lost_tags_action","text":"action character indicating behaviour adopt tagged variables lost: \"error\" (default) issue error; \"warning\" issue warning; \"none\" nothing quiet logical indicating message displayed; used outside pipelines x deprecated","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/lost_tags_action.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and set behaviour for lost tags — lost_tags_action","text":"returns NULL; option set options(\"linelist\")","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/lost_tags_action.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and set behaviour for lost tags — lost_tags_action","text":"","code":"# reset default - done automatically at package loading lost_tags_action() #> Lost tags will now issue a warning.  # check current value get_lost_tags_action() #> [1] \"warning\"  # change to issue errors when tags are lost lost_tags_action(\"error\") #> Lost tags will now issue an error. get_lost_tags_action() #> [1] \"error\"  # change to ignore when tags are lost lost_tags_action(\"none\") #> Lost tags will now be ignored. get_lost_tags_action() #> [1] \"none\"  # reset to default: warning lost_tags_action() #> Lost tags will now issue a warning."},{"path":"https://epiverse-trace.github.io/linelist/reference/make_linelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a linelist from a data.frame — make_linelist","title":"Create a linelist from a data.frame — make_linelist","text":"function converts data.frame tibble linelist object, different types epidemiologically relevant data tagged. includes dates different events (e.g. onset symptoms, case reporting), information patient (e.g. age, gender, location) well information type case (e.g. confirmed, probable) outcome disease. output seem data.frame, linelist-aware packages able automatically use tagged fields data cleaning analysis.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/make_linelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a linelist from a data.frame — make_linelist","text":"","code":"make_linelist(x, ..., allow_extra = FALSE)"},{"path":"https://epiverse-trace.github.io/linelist/reference/make_linelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a linelist from a data.frame — make_linelist","text":"x data.frame tibble containing case line list data, cases rows variables columns ... <dynamic-dots> series tags provided tag_name = \"column_name\", tag_name indicates known variables listed 'Details' values indicate name x; see details list known variable types expected content allow_extra logical indicating additional data tags currently recognized linelist allowed; FALSE, unknown tags trigger error","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/make_linelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a linelist from a data.frame — make_linelist","text":"function returns linelist object.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/make_linelist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a linelist from a data.frame — make_linelist","text":"Known variable types include: id: unique case identifier numeric character date_onset: date symptom onset (see date formats) date_reporting: date case notification (see date formats) date_admission: date hospital admission (see date formats) date_discharge: date hospital discharge (see date formats) date_outcome: date disease outcome (see date formats) date_death: date death (see date formats) gender: factor character indicating gender patient age: numeric indicating age patient, years location: factor character indicating location patient occupation: factor character indicating professional activity patient hcw: logical indicating patient health care worker outcome: factor character indicating outcome disease (death survival) Dates can provided following formats/types: Date objects (e.g. using .Date character correct date format); recommended format POSIXct/POSIXlt objects (finer scale days needed) numeric values, typically indicating number days since first case","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/reference/make_linelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a linelist from a data.frame — make_linelist","text":"","code":"if (require(outbreaks)) {    ## dataset we will convert to linelist   head(measles_hagelloch_1861)    ## create linelist   x <- make_linelist(measles_hagelloch_1861,     id = \"case_ID\",     date_onset = \"date_of_prodrome\",     age = \"age\",     gender = \"gender\"   )    ## print result - just first few entries   head(x)    ## check tags   tags(x)    ## Tags can also be passed as a list with the splice operator (!!!)   my_tags <- list(     id = \"case_ID\",     date_onset = \"date_of_prodrome\",     age = \"age\",     gender = \"gender\"   )   new_x <- make_linelist(measles_hagelloch_1861, !!!my_tags)    ## The output is strictly equivalent to the previous one   identical(x, new_x) } #> [1] TRUE"},{"path":"https://epiverse-trace.github.io/linelist/reference/names-set-.linelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename columns of a linelist — names<-.linelist","title":"Rename columns of a linelist — names<-.linelist","text":"function can used rename columns linelist, adjusting tags needed.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/names-set-.linelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename columns of a linelist — names<-.linelist","text":"","code":"# S3 method for linelist names(x) <- value"},{"path":"https://epiverse-trace.github.io/linelist/reference/names-set-.linelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename columns of a linelist — names<-.linelist","text":"x linelist object value character vector set new names columns x","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/names-set-.linelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename columns of a linelist — names<-.linelist","text":"linelist new column names","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/names-set-.linelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename columns of a linelist — names<-.linelist","text":"","code":"if (require(outbreaks)) {    ## dataset to create a linelist from   measles_hagelloch_1861    ## create linelist   x <- make_linelist(measles_hagelloch_1861,     id = \"case_ID\",     date_onset = \"date_of_prodrome\",     age = \"age\",     gender = \"gender\"   )   head(x)    ## change names   names(x)[1] <- \"case_label\"    ## see results: tags have been updated   head(x)   tags(x)   # This also works with using `dplyr::rename()` because it uses names<-()  # under hood  if (require(dplyr)) {    x <- x %>%      rename(case_id= case_label)    head(x)    tags(x)  } } #> $id #> [1] \"case_id\" #>  #> $date_onset #> [1] \"date_of_prodrome\" #>  #> $gender #> [1] \"gender\" #>  #> $age #> [1] \"age\" #>"},{"path":"https://epiverse-trace.github.io/linelist/reference/print.linelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing method for linelist objects — print.linelist","title":"Printing method for linelist objects — print.linelist","text":"function prints linelist objects.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/print.linelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing method for linelist objects — print.linelist","text":"","code":"# S3 method for linelist print(x, ...)"},{"path":"https://epiverse-trace.github.io/linelist/reference/print.linelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing method for linelist objects — print.linelist","text":"x linelist object ... arguments passed 'print'","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/print.linelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Printing method for linelist objects — print.linelist","text":"Invisibly returns object.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/print.linelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing method for linelist objects — print.linelist","text":"","code":"if (require(outbreaks)) {    ## dataset we'll create a linelist from   measles_hagelloch_1861    ## create linelist   x <- make_linelist(measles_hagelloch_1861,     id = \"case_ID\",     date_onset = \"date_of_prodrome\",     age = \"age\",     gender = \"gender\"   )    ## print object - using only the first few entries   head(x)    # version with a tibble   if (require(tibble) && require(magrittr)) {     measles_hagelloch_1861 %>%       tibble() %>%       make_linelist(         id = \"case_ID\",         date_onset = \"date_of_prodrome\",         age = \"age\",         gender = \"gender\"       )   } } #> Loading required package: tibble #>  #> // linelist object #> # A tibble: 188 × 12 #>    case_ID infector date_of_prodrome date_of_rash date_of_death   age gender #>      <int>    <int> <date>           <date>       <date>        <dbl> <fct>  #>  1       1       45 1861-11-21       1861-11-25   NA                7 f      #>  2       2       45 1861-11-23       1861-11-27   NA                6 f      #>  3       3      172 1861-11-28       1861-12-02   NA                4 f      #>  4       4      180 1861-11-27       1861-11-28   NA               13 m      #>  5       5       45 1861-11-22       1861-11-27   NA                8 f      #>  6       6      180 1861-11-26       1861-11-29   NA               12 m      #>  7       7       42 1861-11-24       1861-11-28   NA                6 m      #>  8       8       45 1861-11-21       1861-11-26   NA               10 m      #>  9       9      182 1861-11-26       1861-11-30   NA               13 m      #> 10      10       45 1861-11-21       1861-11-25   NA                7 f      #> # ℹ 178 more rows #> # ℹ 5 more variables: family_ID <int>, class <fct>, complications <fct>, #> #   x_loc <dbl>, y_loc <dbl> #>  #> // tags: id:case_ID, date_onset:date_of_prodrome, gender:gender, age:age"},{"path":"https://epiverse-trace.github.io/linelist/reference/select.linelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset columns of a linelist object — select.linelist","title":"Subset columns of a linelist object — select.linelist","text":"function deprecated ensure full compatibility default dplyr::select() methods. tag selection feature now possible via has_tag() selection helper.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/select.linelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset columns of a linelist object — select.linelist","text":"","code":"# S3 method for linelist select(.data, ..., tags)"},{"path":"https://epiverse-trace.github.io/linelist/reference/select.linelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset columns of a linelist object — select.linelist","text":".data linelist object ... variables select, using dplyr compatible syntax tags now recommended leverage has_tag() selection helper rather argument.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/select.linelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset columns of a linelist object — select.linelist","text":"function returns linelist selected columns.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/reference/select_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract tagged variables of a linelist object — select_tags","title":"Extract tagged variables of a linelist object — select_tags","text":"function  equivalent running successively tags_df() dplyr::select() linelist object. encourage users understand going order follow software engineering good practice providing just one way given task, function now deprecated.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/select_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract tagged variables of a linelist object — select_tags","text":"","code":"select_tags(x, ...)"},{"path":"https://epiverse-trace.github.io/linelist/reference/select_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract tagged variables of a linelist object — select_tags","text":"x linelist object ... tagged variables select, using dplyr::select() compatible terminology; see tags_names() default values","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/select_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract tagged variables of a linelist object — select_tags","text":"data.frame tagged variables.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/reference/select_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract tagged variables of a linelist object — select_tags","text":"","code":"if (require(outbreaks)) {    ## dataset we'll create a linelist from   measles_hagelloch_1861    ## create linelist   x <- make_linelist(measles_hagelloch_1861,     id = \"case_ID\",     date_onset = \"date_of_prodrome\",     age = \"age\",     gender = \"gender\"   )   head(x)    ## check tagged variables   tags(x)    # DEPRECATED!   select_tags(x, \"gender\", \"age\")    # Instead, use:   library(dplyr)   x %>%     tags_df() %>%     select(gender, age) } #> Warning: `select_tags()` was deprecated in linelist 1.0.0. #> ℹ This function is deprecated: use the two step `tags_df()` and #>   `dplyr::select()` process instead #>     gender age #> 1        f   7 #> 2        f   6 #> 3        f   4 #> 4        m  13 #> 5        f   8 #> 6        m  12 #> 7        m   6 #> 8        m  10 #> 9        m  13 #> 10       f   7 #> 11       f  11 #> 12       f   7 #> 13       m  13 #> 14       f  13 #> 15       m   8 #> 16       f  15 #> 17       f  10 #> 18       f   2 #> 19       m  11 #> 20       m  10 #> 21       f  13 #> 22       f  10 #> 23       f   7 #> 24       m   4 #> 25       f  12 #> 26       m   7 #> 27       m   5 #> 28       f  10 #> 29       m  13 #> 30       f  11 #> 31       f   9 #> 32       m   7 #> 33       f   7 #> 34       m  11 #> 35       f  13 #> 36       m  11 #> 37       m  13 #> 38    <NA>  12 #> 39       m  10 #> 40       m  13 #> 41       m  12 #> 42       f   4 #> 43       m   2 #> 44       m  10 #> 45       m   7 #> 46       m  13 #> 47       f  11 #> 48       f   3 #> 49       m  10 #> 50       f   6 #> 51       m   4 #> 52       m  13 #> 53       m   6 #> 54       m   4 #> 55       f  11 #> 56       m   8 #> 57       m   3 #> 58       m   9 #> 59       f  10 #> 60       m   2 #> 61       f   5 #> 62       m  14 #> 63       m  12 #> 64       m   7 #> 65       m   2 #> 66       f   5 #> 67       f  11 #> 68       f   2 #> 69       m   1 #> 70       m  13 #> 71       f  10 #> 72       f  10 #> 73       f  11 #> 74       f  10 #> 75       m  13 #> 76       m   2 #> 77       f   8 #> 78       f  11 #> 79       f   5 #> 80       m  12 #> 81       m  12 #> 82       m   8 #> 83       f  10 #> 84       m   6 #> 85       f   5 #> 86       f   3 #> 87       f  12 #> 88       f  10 #> 89       f   3 #> 90       m  11 #> 91       f   4 #> 92       f   2 #> 93       m   8 #> 94       f   4 #> 95       m   1 #> 96       m   2 #> 97       m  10 #> 98       m   3 #> 99       m   5 #> 100      m  12 #> 101      f   7 #> 102      m  12 #> 103   <NA>  12 #> 104      m   5 #> 105      m   3 #> 106      m   4 #> 107      f  12 #> 108      m   6 #> 109      f   6 #> 110      m   3 #> 111      m  12 #> 112      m  10 #> 113      f   0 #> 114   <NA>  13 #> 115      f  11 #> 116      m   8 #> 117      m  14 #> 118      f   2 #> 119      f   0 #> 120      m   1 #> 121      m  10 #> 122      f   1 #> 123      f   1 #> 124      m   3 #> 125      f   2 #> 126   <NA>   5 #> 127      m   1 #> 128      m   5 #> 129      f   4 #> 130      f  12 #> 131      m   1 #> 132      m  11 #> 133      f   2 #> 134      m  13 #> 135      m   2 #> 136      f  13 #> 137      f  10 #> 138   <NA>  11 #> 139   <NA>  13 #> 140   <NA>   2 #> 141      f   4 #> 142      m   5 #> 143      f  11 #> 144      m   2 #> 145      f   8 #> 146      f   4 #> 147      f   0 #> 148      f  13 #> 149      m   4 #> 150      m   0 #> 151      f   2 #> 152      f   4 #> 153      f  10 #> 154      f   6 #> 155      m  13 #> 156      m   8 #> 157      f   4 #> 158      f   3 #> 159      f   2 #> 160      f   0 #> 161      f   6 #> 162      f   6 #> 163      f   1 #> 164      m   3 #> 165      m   2 #> 166      m   1 #> 167      m   0 #> 168      m   1 #> 169      m   4 #> 170      m  10 #> 171      m   0 #> 172      f   3 #> 173      m   6 #> 174      f   3 #> 175      m   2 #> 176   <NA>   0 #> 177      f   8 #> 178      m   4 #> 179      f   1 #> 180      m  10 #> 181      f  10 #> 182      m  13 #> 183      m   4 #> 184   <NA>  13 #> 185      m   3 #> 186   <NA>   6 #> 187      m   0 #> 188   <NA>   1"},{"path":"https://epiverse-trace.github.io/linelist/reference/set_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Changes tags of a linelist object — set_tags","title":"Changes tags of a linelist object — set_tags","text":"function changes tags linelist object, using syntax constructor make_linelist(). default tags missing, added final object.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/set_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Changes tags of a linelist object — set_tags","text":"","code":"set_tags(x, ..., allow_extra = FALSE)"},{"path":"https://epiverse-trace.github.io/linelist/reference/set_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Changes tags of a linelist object — set_tags","text":"x data.frame tibble containing case line list data, cases rows variables columns ... <dynamic-dots> series tags provided tag_name = \"column_name\", tag_name indicates known variables listed 'Details' values indicate name x; see details list known variable types expected content allow_extra logical indicating additional data tags currently recognized linelist allowed; FALSE, unknown tags trigger error","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/set_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Changes tags of a linelist object — set_tags","text":"function returns linelist object.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/reference/set_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Changes tags of a linelist object — set_tags","text":"","code":"if (require(outbreaks)) {   ## create a linelist   x <- make_linelist(measles_hagelloch_1861, date_onset = \"date_of_rash\")   tags(x)    ## add new tags and fix an existing one   x <- set_tags(x,     age = \"age\",     gender = \"gender\",     date_onset = \"date_of_prodrome\"   )   tags(x)    ## add non-default tags using allow_extra   x <- set_tags(x, severe = \"complications\", allow_extra = TRUE)   tags(x)    ## remove tags by setting them to NULL   old_tags <- tags(x)   x <- set_tags(x, age = NULL, gender = NULL)   tags(x)    ## setting tags providing a list (used to restore old tags here)   x <- set_tags(x, !!!old_tags)   tags(x) } #> $date_onset #> [1] \"date_of_prodrome\" #>  #> $gender #> [1] \"gender\" #>  #> $age #> [1] \"age\" #>  #> $severe #> [1] \"complications\" #>"},{"path":"https://epiverse-trace.github.io/linelist/reference/sub_linelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsetting of linelist objects — [.linelist","title":"Subsetting of linelist objects — [.linelist","text":"[] [[]] operators linelist objects behaves like regular data.frame tibble, check tagged variables lost, takes appropriate action case (warning, error, ignore, depending general option set via lost_tags_action()) .","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/sub_linelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsetting of linelist objects — [.linelist","text":"","code":"# S3 method for linelist [(x, i, j, drop = FALSE)  # S3 method for linelist [(x, i, j) <- value  # S3 method for linelist [[(x, i, j) <- value  # S3 method for linelist $(x, name) <- value"},{"path":"https://epiverse-trace.github.io/linelist/reference/sub_linelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subsetting of linelist objects — [.linelist","text":"x linelist object vector integer logical subset rows linelist j vector character, integer, logical subset columns linelist drop logical indicating , single column selected, data.frame class dropped return simple vector, case linelist class lost well; defaults FALSE value replacement used entries identified x name literal character string name (possibly backtick     quoted).  extraction, normally (see     ‘Environments’) partially matched names     object.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/sub_linelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subsetting of linelist objects — [.linelist","text":"drop happening, linelist. Otherwise atomic vector.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/reference/sub_linelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subsetting of linelist objects — [.linelist","text":"","code":"if (require(outbreaks) && require(dplyr) && require(magrittr)) {   ## create a linelist   x <- measles_hagelloch_1861 %>%     tibble() %>%     make_linelist(       id = \"case_ID\",       date_onset = \"date_of_prodrome\",       age = \"age\",       gender = \"gender\"     ) %>%     mutate(result = if_else(is.na(date_of_death), \"survived\", \"died\")) %>%     set_tags(outcome = \"result\") %>%     rename(identifier = case_ID)   x    ## dangerous removal of a tagged column setting it to NULL issues a warning   x[, 1] <- NULL   x    x[[2]] <- NULL   x    x$age <- NULL   x } #> Warning: The following tags have lost their variable: #>  id:identifier #> Warning: The following tags have lost their variable: #>  date_onset:date_of_prodrome #> Warning: The following tags have lost their variable: #>  age:age #>  #> // linelist object #> # A tibble: 188 × 10 #>    infector date_of_rash date_of_death gender family_ID class complications #>       <int> <date>       <date>        <fct>      <int> <fct> <fct>         #>  1       45 1861-11-25   NA            f             41 1     yes           #>  2       45 1861-11-27   NA            f             41 1     yes           #>  3      172 1861-12-02   NA            f             41 0     yes           #>  4      180 1861-11-28   NA            m             61 2     yes           #>  5       45 1861-11-27   NA            f             42 1     yes           #>  6      180 1861-11-29   NA            m             42 2     yes           #>  7       42 1861-11-28   NA            m             26 0     yes           #>  8       45 1861-11-26   NA            m             44 1     yes           #>  9      182 1861-11-30   NA            m             44 2     yes           #> 10       45 1861-11-25   NA            f             29 1     yes           #> # ℹ 178 more rows #> # ℹ 3 more variables: x_loc <dbl>, y_loc <dbl>, result <chr> #>  #> // tags: gender:gender, outcome:result"},{"path":"https://epiverse-trace.github.io/linelist/reference/tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the list of tags in a linelist — tags","title":"Get the list of tags in a linelist — tags","text":"function returns list tags identifying specific variable types linelist.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the list of tags in a linelist — tags","text":"","code":"tags(x, show_null = FALSE)"},{"path":"https://epiverse-trace.github.io/linelist/reference/tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the list of tags in a linelist — tags","text":"x linelist object show_null logical indicating complete list tags, including NULL ones, returned; FALSE, tags non-NULL value returned; defaults FALSE","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the list of tags in a linelist — tags","text":"function returns named list names indicate generic types data, values indicate column correspond .","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/tags.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the list of tags in a linelist — tags","text":"Tags stored tags attribute object.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the list of tags in a linelist — tags","text":"","code":"if (require(outbreaks)) {   ## make a linelist   x <- make_linelist(measles_hagelloch_1861, date_onset = \"date_of_prodrome\")    ## check non-null tags   tags(x)    ## get a list of all tags, including NULL ones   tags(x, TRUE) } #> $id #> NULL #>  #> $date_onset #> [1] \"date_of_prodrome\" #>  #> $date_reporting #> NULL #>  #> $date_admission #> NULL #>  #> $date_discharge #> NULL #>  #> $date_outcome #> NULL #>  #> $date_death #> NULL #>  #> $gender #> NULL #>  #> $age #> NULL #>  #> $location #> NULL #>  #> $occupation #> NULL #>  #> $hcw #> NULL #>  #> $outcome #> NULL #>"},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate default tags for a linelist — tags_defaults","title":"Generate default tags for a linelist — tags_defaults","text":"function returns named list providing default tags linelist object (default NULL).","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate default tags for a linelist — tags_defaults","text":"","code":"tags_defaults()"},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_defaults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate default tags for a linelist — tags_defaults","text":"named list.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_defaults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate default tags for a linelist — tags_defaults","text":"","code":"tags_defaults() #> $id #> NULL #>  #> $date_onset #> NULL #>  #> $date_reporting #> NULL #>  #> $date_admission #> NULL #>  #> $date_discharge #> NULL #>  #> $date_outcome #> NULL #>  #> $date_death #> NULL #>  #> $gender #> NULL #>  #> $age #> NULL #>  #> $location #> NULL #>  #> $occupation #> NULL #>  #> $hcw #> NULL #>  #> $outcome #> NULL #>"},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a data.frame of all tagged variables — tags_df","title":"Extract a data.frame of all tagged variables — tags_df","text":"function returns data.frame tagged variables stored linelist. Note output longer linelist, regular data.frame.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a data.frame of all tagged variables — tags_df","text":"","code":"tags_df(x)"},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a data.frame of all tagged variables — tags_df","text":"x linelist object","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a data.frame of all tagged variables — tags_df","text":"data.frame tagged variables.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a data.frame of all tagged variables — tags_df","text":"","code":"if (require(outbreaks) && require(dplyr) && require(magrittr)) {    ## create a tibble linelist   x <- measles_hagelloch_1861 %>%     tibble() %>%     make_linelist(       id = \"case_ID\",       date_onset = \"date_of_prodrome\",       age = \"age\",       gender = \"gender\"     )   x    ## get a data.frame of all tagged variables   tags_df(x) } #> # A tibble: 188 × 4 #>       id date_onset gender   age #>    <int> <date>     <fct>  <dbl> #>  1     1 1861-11-21 f          7 #>  2     2 1861-11-23 f          6 #>  3     3 1861-11-28 f          4 #>  4     4 1861-11-27 m         13 #>  5     5 1861-11-22 f          8 #>  6     6 1861-11-26 m         12 #>  7     7 1861-11-24 m          6 #>  8     8 1861-11-21 m         10 #>  9     9 1861-11-26 m         13 #> 10    10 1861-11-21 f          7 #> # ℹ 178 more rows"},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the list of tag names used in linelist — tags_names","title":"Get the list of tag names used in linelist — tags_names","text":"function returns character tag names used designate specific variable types linelist.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the list of tag names used in linelist — tags_names","text":"","code":"tags_names()"},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the list of tag names used in linelist — tags_names","text":"function returns character vector.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the list of tag names used in linelist — tags_names","text":"","code":"tags_names() #>  [1] \"id\"             \"date_onset\"     \"date_reporting\" \"date_admission\" #>  [5] \"date_discharge\" \"date_outcome\"   \"date_death\"     \"gender\"         #>  [9] \"age\"            \"location\"       \"occupation\"     \"hcw\"            #> [13] \"outcome\""},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_types.html","id":null,"dir":"Reference","previous_headings":"","what":"List acceptable variable types for tags — tags_types","title":"List acceptable variable types for tags — tags_types","text":"function returns named list providing acceptable data types default tags. argument provided, returns default values. Otherwise, provided values used define defaults.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List acceptable variable types for tags — tags_types","text":"","code":"tags_types(..., allow_extra = FALSE)"},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List acceptable variable types for tags — tags_types","text":"... <dynamic-dots> series tags provided tag_name = \"column_name\", tag_name indicates known variables listed 'Details' values indicate name x; see details list known variable types expected content allow_extra logical indicating additional data tags currently recognized linelist allowed; FALSE, unknown tags trigger error","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List acceptable variable types for tags — tags_types","text":"named list.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/reference/tags_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List acceptable variable types for tags — tags_types","text":"","code":"# list default values tags_types() #> $id #> [1] \"numeric\"   \"integer\"   \"character\" #>  #> $date_onset #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $date_reporting #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $date_admission #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $date_discharge #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $date_outcome #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $date_death #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $gender #> [1] \"character\" \"factor\"    #>  #> $age #> [1] \"numeric\" \"integer\" #>  #> $location #> [1] \"character\" \"factor\"    #>  #> $occupation #> [1] \"character\" \"factor\"    #>  #> $hcw #> [1] \"logical\"   \"integer\"   \"character\" \"factor\"    #>  #> $outcome #> [1] \"character\" \"factor\"    #>   # change existing values tags_types(date_onset = \"Date\") # impose a Date class #> $id #> [1] \"numeric\"   \"integer\"   \"character\" #>  #> $date_onset #> [1] \"Date\" #>  #> $date_reporting #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $date_admission #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $date_discharge #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $date_outcome #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $date_death #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $gender #> [1] \"character\" \"factor\"    #>  #> $age #> [1] \"numeric\" \"integer\" #>  #> $location #> [1] \"character\" \"factor\"    #>  #> $occupation #> [1] \"character\" \"factor\"    #>  #> $hcw #> [1] \"logical\"   \"integer\"   \"character\" \"factor\"    #>  #> $outcome #> [1] \"character\" \"factor\"    #>   # add new types e.g. to allow genetic sequences using ape's format tags_types(sequence = \"DNAbin\", allow_extra = TRUE) #> $id #> [1] \"numeric\"   \"integer\"   \"character\" #>  #> $date_onset #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $date_reporting #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $date_admission #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $date_discharge #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $date_outcome #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $date_death #> [1] \"integer\" \"numeric\" \"Date\"    \"POSIXct\" \"POSIXlt\" #>  #> $gender #> [1] \"character\" \"factor\"    #>  #> $age #> [1] \"numeric\" \"integer\" #>  #> $location #> [1] \"character\" \"factor\"    #>  #> $occupation #> [1] \"character\" \"factor\"    #>  #> $hcw #> [1] \"logical\"   \"integer\"   \"character\" \"factor\"    #>  #> $outcome #> [1] \"character\" \"factor\"    #>  #> $sequence #> [1] \"DNAbin\" #>"},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_linelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the content of a linelist object — validate_linelist","title":"Checks the content of a linelist object — validate_linelist","text":"function evaluates validity linelist object checking object class, tags, types tagged variables. combines validations checks made validate_types() validate_tags(). See 'Details' section information checks performed.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_linelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the content of a linelist object — validate_linelist","text":"","code":"validate_linelist(x, allow_extra = FALSE, ref_types = tags_types())"},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_linelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the content of a linelist object — validate_linelist","text":"x linelist object allow_extra logical indicating additional data tags currently recognized linelist allowed; FALSE, unknown tags trigger error ref_types list providing allowed types tags, returned tags_types()","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_linelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks the content of a linelist object — validate_linelist","text":"checks pass, linelist object; otherwise issues error.","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_linelist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checks the content of a linelist object — validate_linelist","text":"following checks performed: x linelist object x well-formed tags attribute default tags present (even NULL) tagged variables correspond existing columns tagged variables acceptable class (optional) x extra tag beyond default tags","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_linelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks the content of a linelist object — validate_linelist","text":"","code":"if (require(outbreaks) && require(dplyr) && require(magrittr)) {    ## create a valid linelist   x <- measles_hagelloch_1861 %>%     tibble() %>%     make_linelist(       id = \"case_ID\",       date_onset = \"date_of_prodrome\",       age = \"age\",       gender = \"gender\"     )   x    ## validation   validate_linelist(x)    ## create an invalid linelist - onset date is a factor   x <- measles_hagelloch_1861 %>%     tibble() %>%     make_linelist(       id = \"case_ID\",       date_onset = \"gender\",       age = \"age\"     )   x    ## the below issues an error   ## note: tryCatch is only used to avoid a genuine error in the example   tryCatch(validate_linelist(x), error = paste) } #> [1] \"Error in validate_types(x, ref_types): Issue when checking class of tag `date_onset`:\\nMust inherit from class 'integer'/'numeric'/'Date'/'POSIXct'/'POSIXlt', but has class 'factor'\\n\""},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the tags of a linelist object — validate_tags","title":"Checks the tags of a linelist object — validate_tags","text":"function evaluates validity tags linelist object checking : ) tags present ii) tags list character iii) default tags present iv) tagged variables exist v) extra tag exists (allow_extra FALSE).","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the tags of a linelist object — validate_tags","text":"","code":"validate_tags(x, allow_extra = FALSE)"},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the tags of a linelist object — validate_tags","text":"x linelist object allow_extra logical indicating additional data tags currently recognized linelist allowed; FALSE, unknown tags trigger error","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks the tags of a linelist object — validate_tags","text":"checks pass, linelist object; otherwise issues error.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks the tags of a linelist object — validate_tags","text":"","code":"if (require(outbreaks) && require(dplyr) && require(magrittr)) {    ## create a valid linelist   x <- measles_hagelloch_1861 %>%     tibble() %>%     make_linelist(       id = \"case_ID\",       date_onset = \"date_of_prodrome\",       age = \"age\",       gender = \"gender\"     )   x    ## validation   validate_tags(x)    ## hack to create an invalid tags (missing defaults)   attr(x, \"tags\") <- list(id = \"case_ID\")    ## the below issues an error   ## note: tryCatch is only used to avoid a genuine error in the example   tryCatch(validate_tags(x), error = paste) } #> [1] \"Error in validate_tags(x): The following default tags are missing:\\ndate_onset, date_reporting, date_admission, date_discharge, date_outcome, date_death, gender, age, location, occupation, hcw, outcome\\n\""},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Check tagged variables are the right class — validate_types","title":"Check tagged variables are the right class — validate_types","text":"function checks class tagged variable linelist pre-defined accepted classes tags_types().","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check tagged variables are the right class — validate_types","text":"","code":"validate_types(x, ref_types = tags_types())"},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check tagged variables are the right class — validate_types","text":"x linelist object ref_types list providing allowed types tags, returned tags_types()","code":""},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check tagged variables are the right class — validate_types","text":"named list.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/reference/validate_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check tagged variables are the right class — validate_types","text":"","code":"if (require(outbreaks) && require(dplyr) && require(magrittr)) {    ## create an invalid linelist - gender is a numeric   x <- measles_hagelloch_1861 %>%     tibble() %>%     make_linelist(       id = \"case_ID\",       gender = \"infector\"     )   x    ## the below would issue an error   ## note: tryCatch is only used to avoid a genuine error in the example   tryCatch(validate_types(x), error = paste)    ## to allow other types, e.g. gender to be integer, character or factor   validate_types(x, tags_types(gender = c(\"integer\", \"character\", \"factor\"))) } #>  #> // linelist object #> # A tibble: 188 × 12 #>    case_ID infector date_of_prodrome date_of_rash date_of_death   age gender #>      <int>    <int> <date>           <date>       <date>        <dbl> <fct>  #>  1       1       45 1861-11-21       1861-11-25   NA                7 f      #>  2       2       45 1861-11-23       1861-11-27   NA                6 f      #>  3       3      172 1861-11-28       1861-12-02   NA                4 f      #>  4       4      180 1861-11-27       1861-11-28   NA               13 m      #>  5       5       45 1861-11-22       1861-11-27   NA                8 f      #>  6       6      180 1861-11-26       1861-11-29   NA               12 m      #>  7       7       42 1861-11-24       1861-11-28   NA                6 m      #>  8       8       45 1861-11-21       1861-11-26   NA               10 m      #>  9       9      182 1861-11-26       1861-11-30   NA               13 m      #> 10      10       45 1861-11-21       1861-11-25   NA                7 f      #> # ℹ 178 more rows #> # ℹ 5 more variables: family_ID <int>, class <fct>, complications <fct>, #> #   x_loc <dbl>, y_loc <dbl> #>  #> // tags: id:case_ID, gender:infector"},{"path":[]},{"path":"https://epiverse-trace.github.io/linelist/news/index.html","id":"breaking-changes-development-version","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"linelist (development version)","text":"make_linelist() set_tags() longer accept named list characters input. Instead, make_linelist(), set_tags() tags_types() now use rlang’s dynamic dots, means can splice list arguments. implementation robust, better tested, makes explicit users want splice list. : Now:","code":"my_tags <- list(   id = \"case_ID\",   date_onset = \"date_of_prodrome\",   age = \"age\",   gender = \"gender\" ) make_linelist(obj, my_tags) # OR make_linelist(   obj,   id = \"case_ID\",   date_onset = \"date_of_prodrome\",   age = \"age\",   gender = \"gender\" ) my_tags <- list(   id = \"case_ID\",   date_onset = \"date_of_prodrome\",   age = \"age\",   gender = \"gender\" ) make_linelist(obj, !!!my_tags) # OR make_linelist(   obj,   id = \"case_ID\",   date_onset = \"date_of_prodrome\",   age = \"age\",   gender = \"gender\" )"},{"path":"https://epiverse-trace.github.io/linelist/news/index.html","id":"new-features-development-version","dir":"Changelog","previous_headings":"","what":"New features","title":"linelist (development version)","text":"linelist objects now new custom $<-.linelist() prevent tag loss subsetting linelist object (@Bisaloo, #86). completes functionality already provided [<-.linelist() [[<-.linelist() methods.","code":"x$tagged_column <- NULL #> Warning in prune_tags(out, lost_action): The following tags have lost their variable: #>  tag:tagged_column"},{"path":"https://epiverse-trace.github.io/linelist/news/index.html","id":"linelist-100","dir":"Changelog","previous_headings":"","what":"linelist 1.0.0","title":"linelist 1.0.0","text":"CRAN release: 2023-10-19","code":""},{"path":"https://epiverse-trace.github.io/linelist/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"linelist 1.0.0","text":"Increased compatibility dplyr now documented ensured tests dplyr verbs linelist objects part testing & continuous integration system, well new vignette: https://epiverse-trace.github.io/linelist/articles/compat-dplyr.html (@Bisaloo, #53) new selection helper provided tidyverse users, based existing selectors provided tidyselect package: has_tag() (@Bisaloo, #61). feeding character vector tags operate , can work dplyr verbs specific tagged columns without explicitly use column names:","code":"x %>%   dplyr::select(has_tag(c(\"id\", \"date_of_onset\")))"},{"path":"https://epiverse-trace.github.io/linelist/news/index.html","id":"breaking-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"linelist 1.0.0","text":"longer possible use lost_tags_action() within pipeline. must now set separate step. makes internal code robust clarifies part pipeline versus global option (@Bisaloo, #79). select_tags() function now deprecated ensure provide just one clear way address given issue “happy path” clearly signposted (@Bisaloo, #61). using function, now recommend using explicit two-steps process: custom select.linelist() method deprecated providing custom [.linelist() sufficient ensure compatibility dplyr::select() default methods, including triggering lost_tags_action() tag removal (@Bisaloo, #61). full deletion method possible moment want provide smooth transition users relied custom tags argument select.linelist() method. now recommend instead use new has_tag() selection helper: custom rename.linelist() method removed providing custom names<-().linelist method sufficient ensure compatibility dplyr::rename(), including appropriate modification tags. (@Bisaloo, #60)","code":"# Deprecated x %>%   select_tags(\"age\")  # Instead use x %>%   tags_df() %>%   select(age)  # Or x %>%   select(has_tag(\"age\")) %>%   tags_df() x %>%   dplyr::select(has_tag(c(\"id\", \"date_of_onset\")))  # Instead of x %>%   select(tags = c(\"id\", \"date_of_onset\"))"},{"path":"https://epiverse-trace.github.io/linelist/news/index.html","id":"documentation-1-0-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"linelist 1.0.0","text":"added hex logo thanks @dgmascarina contribution added short lay description README thanks Emma Marty’s contribution fixed typos package documentation (@pitmonticone, #30)","code":""},{"path":"https://epiverse-trace.github.io/linelist/news/index.html","id":"bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"linelist 1.0.0","text":"linelist now explicitly marked incompatible data.table. practice, make_linelist(x) now errors x inherits data.table (#55, @Bisaloo, based discussions @TimTaylor). [.linelist() now works subset column including just one argument (#54, @Bisaloo). E.g., x[1]. indirect effect, also improves compatibility dplyr verbs rely method (#51). subsetting linelist extra tags (e.g., created via make_linelist(allow_extra = TRUE)) longer causes error (#65, @Bisaloo; reported @TimTaylor #63)","code":""},{"path":"https://epiverse-trace.github.io/linelist/news/index.html","id":"internal-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"linelist 1.0.0","text":"testthat tests now run parallel (#77, @Bisaloo) testthat tests now warn partial matching (#77, @Bisaloo)","code":""},{"path":"https://epiverse-trace.github.io/linelist/news/index.html","id":"linelist-001","dir":"Changelog","previous_headings":"","what":"linelist 0.0.1","title":"linelist 0.0.1","text":"CRAN release: 2022-05-13 first proof--concept release CRAN.","code":""},{"path":"https://epiverse-trace.github.io/linelist/news/index.html","id":"new-features-0-0-1","dir":"Changelog","previous_headings":"","what":"New features","title":"linelist 0.0.1","text":"linelist class implements tagging system keep track key epidemiological variables data.frame validation routines tagged variables accessors retrieve tagged variables API easy extension additional tagged variables dedicated S3 methods providing safeguards operations lose tagged variables full documentation functions vignette 100% test coverage","code":""}]
